/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package banking.admin;

import connection.connect;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class administory extends javax.swing.JFrame {

    String type;

    /**
     * Creates new form administory
     */
    public administory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "admin_no", "date", "to admin no", "amount", "type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("BACK TO HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("date");

        jButton2.setText("SUBMIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("account_no");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all" }));

        jLabel6.setText("Transaction type");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.LEADING, 0, 92, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(26, 26, 26))
        );

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRANSACTION HISTORY");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("username");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("admin_no");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        connect cn = new connect();
        try {
            Statement stmt = cn.conn();
            admindashboard ad = new admindashboard();

            String query2 = "select * from admin where admin_no='" + jLabel5.getText() + "'";
            ResultSet rs = stmt.executeQuery(query2);
            while (rs.next()) {
                type = rs.getString("usertype");
                if (rs.getString("usertype").equals("user")) {
                    ad.jButton4.setVisible(false);
                }
                ad.setVisible(true);
                ad.jl.setText(jLabel5.getText());
                ad.jlabel.setText(jLabel3.getText());
                ad.jLabel6.setText(type);
                SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
                String formattedDate = formatter.format(new java.util.Date());
                ad.jLabel3.setText("DATE : " + formattedDate);
                dispose();

            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        connect cn = new connect();

        try {

            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            Statement stmt = cn.conn();
            String selectedvalue = jComboBox2.getSelectedItem().toString();
            String selectedvalue1 = jComboBox3.getSelectedItem().toString();
            String selectedvalue2 = jComboBox1.getSelectedItem().toString();
            model.setRowCount(0);

            String query = "select * from admin where admin_no='" + jLabel5.getText() + "'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                if (selectedvalue.equals("all")) {
                    if (selectedvalue1.equals("all")) {
                        if (selectedvalue2.equals("all")) {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "'";
                                ResultSet rs1 = stmt.executeQuery(query2);
                                while (rs1.next()) { 
                                    model.insertRow(0, new Object[]{rs1.getString("admin_no"), rs1.getString("date"), rs1.getString("to_admin_no"), rs1.getString("amount"), rs1.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory ";
                                ResultSet rs2 = stmt.executeQuery(query2);
                                while (rs2.next()) {
                                    model.insertRow(0, new Object[]{rs2.getString("admin_no"), rs2.getString("date"), rs2.getString("to_admin_no"), rs2.getString("amount"), rs2.getString("type")});
                                }
                            }

                        } else {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "'&& type='" + selectedvalue2 + "'";
                                ResultSet rs3 = stmt.executeQuery(query2);
                                while (rs3.next()) {
                                    model.insertRow(0, new Object[]{rs3.getString("admin_no"), rs3.getString("date"), rs3.getString("to_admin_no"), rs3.getString("amount"), rs3.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where type='" + selectedvalue2 + "'";
                                ResultSet rs4 = stmt.executeQuery(query2);
                                while (rs4.next()) {
                                    model.insertRow(0, new Object[]{rs4.getString("admin_no"), rs4.getString("date"), rs4.getString("to_admin_no"), rs4.getString("amount"), rs4.getString("type")});
                                }
                            }
                        }
                    } else {
                        if (selectedvalue2.equals("all")) {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "'&& to_admin_no='" + selectedvalue1 + "'";
                                ResultSet rs5 = stmt.executeQuery(query2);
                                while (rs5.next()) {
                                    model.insertRow(0, new Object[]{rs5.getString("admin_no"), rs5.getString("date"), rs5.getString("to_admin_no"), rs5.getString("amount"), rs5.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where to_admin_no='" + selectedvalue1 + "'";
                                ResultSet rs6 = stmt.executeQuery(query2);
                                while (rs6.next()) {
                                    model.insertRow(0, new Object[]{rs6.getString("admin_no"), rs6.getString("date"), rs6.getString("to_admin_no"), rs6.getString("amount"), rs6.getString("type")});
                                }
                            }
                        } else {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "'&& to_admin_no='" + selectedvalue1 + "'&& type='" + selectedvalue2 + "'";
                                ResultSet rs7 = stmt.executeQuery(query2);
                                while (rs7.next()) {
                                    model.insertRow(0, new Object[]{rs7.getString("admin_no"), rs7.getString("date"), rs7.getString("to_admin_no"), rs7.getString("amount"), rs7.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where to_admin_no='" + selectedvalue1 + "'&& type='" + selectedvalue2 + "'";
                                ResultSet rs8 = stmt.executeQuery(query2);
                                while (rs8.next()) {
                                    model.insertRow(0, new Object[]{rs8.getString("admin_no"), rs8.getString("date"), rs8.getString("to_admin_no"), rs8.getString("amount"), rs8.getString("type")});
                                }
                            }
                        }
                    }

                } else {
                    if (selectedvalue1.equals("all")) {
                        if (selectedvalue2.equals("all")) {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "'&& date='" + selectedvalue + "'";
                                ResultSet rs9 = stmt.executeQuery(query2);
                                while (rs9.next()) {
                                    model.insertRow(0, new Object[]{rs9.getString("admin_no"), rs9.getString("date"), rs9.getString("to_admin_no"), rs9.getString("amount"), rs9.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where date='" + selectedvalue + "'";
                                ResultSet rs10 = stmt.executeQuery(query2);
                                while (rs10.next()) {
                                    model.insertRow(0, new Object[]{rs10.getString("admin_no"), rs10.getString("date"), rs10.getString("to_admin_no"), rs10.getString("amount"), rs10.getString("type")});
                                }
                            }
                        } else {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "' && type='" + selectedvalue2 + "' && date='" + selectedvalue + "'";
                                ResultSet rs11 = stmt.executeQuery(query2);
                                while (rs11.next()) {
                                    model.insertRow(0, new Object[]{rs11.getString("admin_no"), rs11.getString("date"), rs11.getString("to_admin_no"), rs11.getString("amount"), rs11.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where type='" + selectedvalue2 + "' && date='" + selectedvalue + "'";
                                ResultSet rs12 = stmt.executeQuery(query2);
                                while (rs12.next()) {
                                    model.insertRow(0, new Object[]{rs12.getString("admin_no"), rs12.getString("date"), rs12.getString("to_admin_no"), rs12.getString("amount"), rs12.getString("type")});
                                }
                            }
                        }
                    } else {
                        if (selectedvalue2.equals("all")) {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "' && date='" + selectedvalue + "' && to_admin_no='" + selectedvalue1 + "'";
                                ResultSet rs13 = stmt.executeQuery(query2);
                                while (rs13.next()) {
                                    model.insertRow(0, new Object[]{rs13.getString("admin_no"), rs13.getString("date"), rs13.getString("to_admin_no"), rs13.getString("amount"), rs13.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where date='" + selectedvalue + "' && to_admin_no='" + selectedvalue1 + "'";
                                ResultSet rs14 = stmt.executeQuery(query2);
                                while (rs14.next()) {
                                    model.insertRow(0, new Object[]{rs14.getString("admin_no"), rs14.getString("date"), rs14.getString("to_admin_no"), rs14.getString("amount"), rs14.getString("type")});
                                }
                            }
                        } else {
                            if (rs.getString("usertype").equals("user")) {
                                String query2 = "select * from administory where admin_no='" + jLabel5.getText() + "'&& date='" + selectedvalue + "' && type='" + selectedvalue2 + "' && to_admin_no='" + selectedvalue1 + "'";
                                ResultSet rs15 = stmt.executeQuery(query2);
                                while (rs15.next()) {
                                    model.insertRow(0, new Object[]{rs15.getString("admin_no"), rs15.getString("date"), rs15.getString("to_admin_no"), rs15.getString("amount"), rs15.getString("type")});
                                }
                            } else {
                                String query2 = "select * from administory where date='" + selectedvalue + "' && type='" + selectedvalue2 + "' && to_admin_no='" + selectedvalue1 + "'";
                                ResultSet rs16 = stmt.executeQuery(query2);
                                while (rs16.next()) {
                                    model.insertRow(0, new Object[]{rs16.getString("admin_no"), rs16.getString("date"), rs16.getString("to_admin_no"), rs16.getString("amount"), rs16.getString("type")});
                                }
                            }
                        }
                    }
                }
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(administory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(administory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(administory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(administory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new administory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JComboBox<String> jComboBox1;
    public javax.swing.JComboBox<String> jComboBox2;
    public javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
